app:
  id: signal
  version: '1'
  graphs:
    - subscribes: signal.test
      publishes: signal.tested

      input:
        schema:
          type: object
          properties:
            child_flow_id:
              type: string

      expire: 180

      activities:
        trigger:
          title: Entry Point
          type: trigger
          job:
            maps:
              child_flow_id: "{$self.input.data.child_flow_id}"

        sleeper:
          title: Sleep for 5s
          type: hook
          sleep: 5

        awaiter:
          title: Invoke another flow
          type: await
          topic: hook.test
          input:
            schema:
              type: object
              properties:
                id:
                  type: string
                parent_job_id:
                  type: string
            maps:
              id: '{trigger.output.data.child_flow_id}'
              parent_job_id: '{$job.metadata.jid}'

        signaler:
          title: Signal other flow to resume
          type: signal
          subtype: all
          key_name: parent_job_id
          key_value: '{$job.metadata.jid}'
          topic: hook.resume
          resolver:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    parent_job_id:
                      type: string
                scrub:
                  type: boolean
            maps:
              data:
                parent_job_id: '{$job.metadata.jid}'
              scrub: true
          signal:
            schema:
              type: object
              properties:
                done:
                  type: boolean
            maps:
              done: true

        pender:
          title: Runs when awaiter returns 202
          type: hook

        ender:
          title: Runs when awaiter returns 200
          type: hook

      transitions:
        trigger:
          - to: sleeper
          - to: awaiter
        sleeper:
          - to: signaler
        awaiter:
          - to: ender
          - to: pender
            conditions:
              code: 202

    - subscribes: signal.one.test
      publishes: signal.one.tested

      input:
        schema:
          type: object
          properties:
            child_flow_id:
              type: string

      expire: 180

      activities:
        onetrigger:
          title: One Trigger Entry Point
          type: trigger
          job:
            maps:
              child_flow_id: "{$self.input.data.child_flow_id}"

        onesleeper:
          title: Sleep for 5s
          type: hook
          sleep: 5

        oneawaiter:
          title: Invoke another flow
          type: await
          topic: hook.test
          input:
            schema:
              type: object
              properties:
                id:
                  type: string
                parent_job_id:
                  type: string
            maps:
              id: '{onetrigger.output.data.child_flow_id}'
              parent_job_id: '{$job.metadata.jid}'

        onesignaler:
          title: Signal other flow - pending
          type: signal
          subtype: one
          topic: hook.resume
          code: 202
          status: pending
          signal:
            schema:
              type: object
              properties:
                id:
                  type: string
                done:
                  type: boolean
            maps:
              id: '{onetrigger.output.data.child_flow_id}'
              done: false

        twosignaler:
          title: Signal other flow - success
          type: signal
          subtype: one
          topic: hook.resume
          code: 200
          status: success
          signal:
            schema:
              type: object
              properties:
                id:
                  type: string
                done:
                  type: boolean
            maps:
              id: '{onetrigger.output.data.child_flow_id}'
              done: true

        onepender:
          title: Runs when awaiter returns 202
          type: hook

        oneender:
          title: Runs when awaiter returns 200
          type: hook

      transitions:
        onetrigger:
          - to: onesleeper
          - to: oneawaiter
        onesleeper:
          - to: onesignaler
        onesignaler:
          - to: twosignaler
        oneawaiter:
          - to: oneender
            conditions:
              code: 200
          - to: onepender
            conditions:
              code: 202

    - subscribes: hook.test
      publishes: hook.tested

      expire: 180

      input:
        schema:
          type: object
          properties:
            parent_job_id:
              type: string
            id:
              type: string
      output:
        schema:
          type: object
          properties:
            done:
              type: boolean

      activities:
        hookTrigger:
          type: trigger
          emit: true
          job:
            maps:
              id: "{$job.metadata.jid}"
              parent_job_id: "{$self.output.data.parent_job_id}"
              done: false
          stats:
            id: "{$self.input.data.id}"
            key: "{$self.input.data.parent_job_id}"
            granularity: infinity
            measures:
              - measure: index
                target: "{$self.input.data.parent_job_id}"
        hookSignaler:
          type: hook
          hook:
            type: object
            properties:
              done:
                type: boolean
          job:
            maps:
              done: "{$self.hook.data.done}"

        hook200:
          title: 200 Response
          type: hook
        hook202:
          title: 202 Response
          type: hook
          emit: true

      transitions:
        hookTrigger:
          - to: hookSignaler
        hookSignaler:
          - to: hook200
            conditions:
              code: 200
          - to: hook202
            conditions:
              code: 202

      hooks:
        hook.resume:
          - to: hookSignaler
            conditions:
              match:
                - expected: "{$job.metadata.jid}"
                  actual: "{$self.hook.data.id}"

    - subscribes: signal.toggle
      publishes: signal.toggled

      input:
        schema:
          type: object
          properties:
            jobId:
              type: string
            statusThreshold:
              type: number
      output:
        schema:
          type: object
          properties:
            done:
              type: boolean
            howdy:
              type: string

      expire: 180

      activities:
        toggleTrigger:
          title: Entry Point for status threshold test
          type: trigger
          stats:
            id: "{$self.input.data.jobId}"
          job:
            maps:
              done: false

        waitForSignaler:
          title: Conditionally registers a signal-in listener if statusThreshold is met
          type: hook
          statusThreshold: '{toggleTrigger.output.data.statusThreshold}'
          emit:
            '@pipe':
              - ['{toggleTrigger.output.data.statusThreshold}', true, false]
              - ['{@conditional.ternary}']
          hook:
            type: object
            properties:
              done:
                type: boolean
              howdy:
                type: string
          job:
            maps:
              done: "{$self.hook.data.done}"
              howdy: "{$self.hook.data.howdy}"

      transitions:
        toggleTrigger:
          - to: waitForSignaler

      hooks:
        waitForSignaler.doPleaseResume:
          - to: waitForSignaler
            conditions:
              match:
                - expected: "{$job.metadata.jid}"
                  actual: "{$self.hook.data.id}"
